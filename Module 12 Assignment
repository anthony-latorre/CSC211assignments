public class Fibonacci {

    public static int fibonacciRecursive(int n) {
        if (n == 0) {
            return 0; // First number in sequence
        } else if (n == 1) {
            return 1; // Second number in sequence
        } else {
            // Add the two previous numbers
            return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
        }
    }

    public static int fibonacciIterative(int n) {
        int a = 0;
        int b = 1;

        if (n == 0) return a;
        if (n == 1) return b;

        int next = 0;

        for (int i = 2; i <= n; i++) {
            next = a + b;
            a = b;
            b = next;
        }

        return b;
    }

public class DecimalToBinary {

 
    public static String decimalToBinaryRecursive(int n) {
        if (n == 0) {
            return "";
        } else {
            return decimalToBinaryRecursive(n / 2) + (n % 2);
        }
    }

    public static String convertRecursive(int n) {
        if (n == 0) {
            return "0";
        } else {
            return decimalToBinaryRecursive(n);
        }
    }

    public static String decimalToBinaryIterative(int n) {
        if (n == 0) {
            return "0";
        }

        String binary = "";

        while (n > 0) {
            binary = (n % 2) + binary; // Add remainder to front
            n = n / 2; // Divide by 2
        }

        return binary;
    }
